CONST	= lib.ecma.require(@lib.physics.constants);
g		= 2; % particle degeneracy

EXPORT.radius = lib.profile.mapping(...
	'map',		@(obj) g^(-1/2)*pi^(1/4)*(CONST.mp/obj.data.m)^2*CONST.lp,...
	'label',	'{\rm m}' ...
);

EXPORT.mass = lib.profile.mapping(...
	'map',		@(obj) 1/2*g^(-1/2)*pi^(1/4)*(CONST.mp/obj.data.m)^2*CONST.mp,...
	'label',	'{\rm kg}'...
);

EXPORT.velocity = lib.profile.mapping(...
	'map',		CONST.c,...
	'label',	'{\rm m}/{\rm s}'...
);

EXPORT.acceleration = lib.profile.mapping(...
	'map',		@(obj) CONST.c^2/EXPORT.radius.fmap(obj),...
	'label',	'{\rm m}/{\rm s}^2}'...
);

EXPORT.density = lib.profile.mapping(...
	'map',		@(obj) g*obj.data.m^4/CONST.h^3*CONST.c^3*pi^(3/2),...
	'label',	'{\rm kg}/{\rm m}^3');

EXPORT.pressure = lib.profile.mapping(...
	'map',		@(obj) EXPORT.density.fmap(obj)*CONST.c^2,...
	'label',	'{rm N}/{\rm m}^2'...
);

EXPORT.temperature = lib.profile.mapping(...
	'map',		@(obj) obj.data.m*CONST.c^2/CONST.kB,...
	'label',	'{\rm K}'...
);

EXPORT.particleMass = lib.profile.mapping(...
	'map',		@(obj) obj.data.m,...
	'label',	'{\rm kg}'...
);

EXPORT.particleNumber = lib.profile.mapping(...
	'map',		@(obj) EXPORT.mass.fmap(obj)/obj.data.m,...
	'label',	'{\rm particles}');

EXPORT.particleDensity = lib.profile.mapping(...
	'map',		@(obj) EXPORT.density.fmap(obj)/obj.data.m,...
	'label',	'{\rm m}^{-3}');
