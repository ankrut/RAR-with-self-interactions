CONST = lib.ecma.require(@lib.physics.constants);
SCALE = lib.ecma.require(@lib.model.cRAR.scale.SI);

EXPORT.radius = lib.profile.mapping(...
	'map',		@(obj) SCALE.radius.fmap(obj)/CONST.parsec,...
	'label',	'{\rm pc}' ...
);

EXPORT.velocity = lib.profile.mapping(...
	'map',		CONST.c/1E3,...
	'label',	'{\rm km/s}'...
);

EXPORT.mass = lib.profile.mapping(...
	'map',		@(obj) SCALE.mass.fmap(obj)/CONST.Msun,...
	'label',	'M_\odot'...
);

EXPORT.massDiff = lib.profile.mapping(...
	'map',		@(obj) SCALE.mass.fmap(obj)/CONST.Msun/(SCALE.radius.fmap(obj)/CONST.parsec),...
	'label',	'M_\odot/{\rm pc}'...
);

EXPORT.density = lib.profile.mapping(...
	'map',		@(obj) SCALE.density.fmap(obj)/(CONST.Msun/CONST.parsec^3),...
	'label',	'M_\odot/{\rm pc}^3' ...
);

EXPORT.pressure = lib.profile.mapping(...
	'map',		@(obj) SCALE.density.fmap(obj)/(CONST.c^2*CONST.Msun/CONST.parsec^3),...
	'label',	'c^2 M_\odot/{\rm pc}^3' ...
);

EXPORT.particleDensity = lib.profile.mapping(...
	'map',		@(obj) SCALE.particleDensity.fmap(obj)/(1/CONST.parsec^3),...
	'label',	'{\rm pc}^{-3}' ...
);

EXPORT.particleMass = lib.profile.mapping(...
	'map',		@(obj) SCALE.particleMass.fmap(obj)/CONST.eVcc/1E3,...
	'label',	'{\rm keV}/c^2'...
);

EXPORT.potentialDiff = lib.profile.mapping(...
	'map',		@(obj) 1/(SCALE.radius.fmap(obj)/CONST.parsec),...
	'label',	'1/{\rm pc}'...
);

EXPORT.degeneracyDiff = lib.profile.mapping(...
	'map',		@(obj) -1/(SCALE.radius.fmap(obj)/CONST.parsec),...
	'label',	'-1/{\rm pc}'...
);

EXPORT.temperatureDiff = lib.profile.mapping(...
	'map',		@(obj) -SCALE.particleMass.fmap(obj)*CONST.c^2/CONST.kB/(SCALE.radius.fmap(obj)/CONST.parsec),...
	'label',	'-{\rm K}/{\rm pc}'...
);